name: Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10']
    env:
      PYTHONPATH: ${{ github.workspace }}
      DATABASE_URL: postgresql://test_user:test_password@localhost:5432/test_db

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: >
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libpq-dev python3-dev

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install wheel setuptools
        pip install -r requirements.txt

    - name: Debug environment
      run: |
        echo "PYTHONPATH: $PYTHONPATH"
        python -c "import sys; print('Python path:', sys.path)"
        ls -la
        ls -la src/
        pip list

    - name: Prepare test environment
      run: |
        mkdir -p src/backend/ai/models
        touch src/backend/ai/__init__.py
        touch src/backend/__init__.py
        touch src/__init__.py

    - name: Run tests with debug output
      run: |
        python -m pytest -v tests/ --cov=src --tb=short -s

    - name: Upload coverage
      if: success()
      uses: codecov/codecov-action@v1
      with:
        fail_ci_if_error: true